# Listing of Parameters
# ---------------------
#################################################################################
# Discretization
# Discretization and grids:
#    grid_flag = 0 for squares
#              = 1 for input quads
#              = 2 for 3x2 initial squares
#              = 3 for smooth transformation       
#              = 4 for h2 uniform perturb
#              = 5 for h1.5 uniform perturb
#              = 6 for h1 uniform perturb 
set degree         = 1
set refinements    = 3
set grid_flag      = 0
set time_step      = 0.0001
set num_time_steps = 10

#################################################################################
# Physical parameters
set alpha = 1.0
set Storativity   = 1.0

subsection permeability 2D
  set Function constants  =
  # Order: 00,01,10,11
  set Function expression = pow(x+1.0,2.0)/(x*4.0+(x^2)*(y^2)-pow(sin(x*y),2.0)+x*(y^2)*2.0+(x^2)*6.0+(x^3)*4.0+x^4+y^2+1.0); -sin(x*y)/(x*4.0+(x^2)*(y^2)-pow(sin(x*y),2.0)+x*(y^2)*2.0+(x^2)*6.0+(x^3)*4.0+x^4+y^2+1.0); -sin(x*y)/(x*4.0+(x^2)*(y^2)-pow(sin(x*y),2.0)+x*(y^2)*2.0+(x^2)*6.0+(x^3)*4.0+x^4+y^2+1.0); (x*2.0+x^2+y^2+1.0)/(x*4.0+(x^2)*(y^2)-pow(sin(x*y),2.0)+x*(y^2)*2.0+(x^2)*6.0+(x^3)*4.0+x^4+y^2+1.0)
  set Variable names      = x,y,t
end

subsection permeability 3D
  set Function constants  =
  # Order: 00,01,10,11
  set Function expression = 1/(x^2 + y^2 + 1); 0; 0; 0; (x^2*y^2 + 1)/(x^2*y^2*z^2 + x^2*y^2 + z^2 - sin(x*y)^2 + 1); -sin(x*y)/(x^2*y^2*z^2 + x^2*y^2 + z^2 - sin(x*y)^2 + 1); 0; -sin(x*y)/(x^2*y^2*z^2 + x^2*y^2 + z^2 - sin(x*y)^2 + 1); (z^2 + 1)/(x^2*y^2*z^2 + x^2*y^2 + z^2 - sin(x*y)^2 + 1)
  set Variable names      = x,y,z,t
end


subsection lambda 2D
  set Function constants  =
  set Function expression = 100.0
  set Variable names      = x,y,t
end

subsection lambda 3D
  set Function constants  =
  set Function expression = 123.0
  set Variable names      = x,y,z,t
end

subsection mu 2D
  set Function constants  =
  set Function expression = 100.0
  set Variable names      = x,y,t
end

subsection mu 3D
  set Function constants  =
  set Function expression = 79.3
  set Variable names      = x,y,z,t
end

#################################################################################
# Right hand sides
# Darcy RHS
subsection Darcy RHS 2D
  set Function constants  =
  set Function expression = exp(t)*(cos(y*pi)*sin(x*pi) + 10) + exp(t)*(2*x + 3*x^2*y^4 + cos(y - 1)*cos((x - 1)*(y - 1))*(y - 1)) - exp(t)*(3*(x - 1)^4*(y - 1)^2 - 2*y + x*sin(x*y)*sin(x) + 2) + exp(t)*((2778046668940015*cos(pi*x)*sin(pi*y)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*y)*sin(pi*x)*((x + 1)^2 + y^2))/281474976710656 - pi*cos(pi*x)*cos(pi*y)*(2*x + 2) + y*pi*sin(pi*x)*sin(pi*y)*cos(x*y)) + exp(t)*((2778046668940015*cos(pi*x)*sin(pi*y)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*y)*sin(pi*x)*(x + 1)^2)/281474976710656 - x*pi*cos(pi*x)*cos(pi*y)*cos(x*y))
  set Variable names      = x,y,t
end
subsection Darcy RHS 3D
  set Function constants  =
  set Function expression = -sin(t)*(x+y+z+1.5) -cos(t)*(2*x+x*cos(x*y))+cos(t)*(- 2*(exp(x)-1) +2*(exp(x)-1)*cos(pi/12))
  set Variable names      = x,y,z,t
end

# Elasticity RHS
subsection Elasticity RHS 2D
  set Function constants  =
  set Function expression = 100*exp(t)*(cos(y - 1)*sin((x - 1)*(y - 1)) - 12*x^3*y^2 + cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)^2 + 2*sin(y - 1)*cos((x - 1)*(y - 1))*(x - 1)) - 300*exp(t)*(6*x*y^4 - cos(y - 1)*sin((x - 1)*(y - 1))*(y - 1)^2 + 2) + 200*exp(t)*(sin(x*y)*sin(x) + 12*(x - 1)^3*(y - 1)^2 + x*sin(x*y)*cos(x) + x*y*cos(x*y)*sin(x)) + pi*exp(t)*cos(x*pi)*cos(y*pi); 300*exp(t)*(3*(2*y - 2)*(x - 1)^4 + x^2*cos(x*y)*sin(x) - 2) - 200*exp(t)*(cos(y - 1)*cos((x - 1)*(y - 1)) + 12*x^2*y^3 - sin(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)*(y - 1)) + 100*exp(t)*(12*(x - 1)^2*(y - 1)^3 + cos(x*y)*sin(x) + 2*y*sin(x*y)*cos(x) + y^2*cos(x*y)*sin(x)) - pi*exp(t)*sin(x*pi)*sin(y*pi)
  set Variable names      = x,y,t
end
subsection Elasticity RHS 3D 
  set Function constants  =
  set Function expression = sin(t)*(-2.0*exp(x)*(123.0 + 79.3)*(cos(pi/12.0) - 1.0))+cos(t);sin(t)*(79.3*exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5))+cos(t); sin(t)*(-79.3*exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5))+cos(t)
  set Variable names      = x,y,z,t
end

#################################################################################   1/(2*79.3)-(3*123)/(2*79.3+3*123)          cos(t)*(x+y+z+1.5)   
# Boundary conditions
# Darcy BC
subsection Darcy BC 2D
  set Function constants  =
  set Function expression = exp(t)*(cos(y*pi)*sin(x*pi) + 10)
  set Variable names      = x,y,t
end
subsection Darcy BC 3D
  set Function constants  =
  set Function expression = cos(t)*(x+y+z+1.5)
  set Variable names      = x,y,z,t
end

# Elasticity BC
subsection Elasticity BC 2D
  set Function constants  =
  set Function expression = exp(t)*(x^3*y^4 + cos(y - 1)*sin((x - 1)*(y - 1)) + x^2); exp(t)*((y - 1)^2 - (x - 1)^4*(y - 1)^3 + cos(x*y)*sin(x))
  set Variable names      = x,y,t
end
subsection Elasticity BC 3D
  set Function constants  =
  set Function expression = 0.0; sin(t)*(-(exp(x) - 1.0)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*((exp(x) - 1.0)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5))
  set Variable names      = x,y,z,t
end

#################################################################################
# Initial conditions (only pressure and stress values are used)   
subsection Initial conditions 2D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression = 0; 0; cos(y*pi)*sin(x*pi) + 10; 600*x + 200*y + 900*x^2*y^4 - cos(y*pi)*sin(x*pi) - 300*(x - 1)^4*(y - 1)^2 - 100*x*sin(x*y)*sin(x) + 300*cos(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - 210; 400*x^3*y^3 - 100*sin(y - 1)*sin((x - 1)*(y - 1)) - 400*(x - 1)^3*(y - 1)^3 + 100*cos(x*y)*cos(x) - 100*y*sin(x*y)*sin(x) + 100*cos(y - 1)*cos((x - 1)*(y - 1))*(x - 1); 400*x^3*y^3 - 100*sin(y - 1)*sin((x - 1)*(y - 1)) - 400*(x - 1)^3*(y - 1)^3 + 100*cos(x*y)*cos(x) - 100*y*sin(x*y)*sin(x) + 100*cos(y - 1)*cos((x - 1)*(y - 1))*(x - 1); 200*x + 600*y + 300*x^2*y^4 - cos(y*pi)*sin(x*pi) - 900*(x - 1)^4*(y - 1)^2 - 300*x*sin(x*y)*sin(x) + 100*cos(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - 610; 0; 0; 0
  set Variable names      = x,y,t
end
subsection Initial conditions 3D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression = 0; 0; 0; x+y+z+1.5; -(x+y+z+1.5); 0; 0; 0; -(x+y+z+1.5); 0; 0; 0; -(x+y+z+1.5); 0; 0; 0; 0; 0; 0
  set Variable names      = x,y,z,t
end

#################################################################################
# Exact solution, values
subsection Exact solution 2D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression = -exp(t)*(pi*cos(pi*x)*cos(pi*y)*((x + 1)^2 + y^2) - pi*sin(pi*x)*sin(pi*y)*sin(x*y)); exp(t)*(pi*sin(pi*x)*sin(pi*y)*(x + 1)^2 - pi*cos(pi*x)*cos(pi*y)*sin(x*y)); exp(t)*(cos(y*pi)*sin(x*pi) + 10); 300*exp(t)*(2*x + 3*x^2*y^4 + cos(y - 1)*cos((x - 1)*(y - 1))*(y - 1)) - exp(t)*(cos(y*pi)*sin(x*pi) + 10) - 100*exp(t)*(3*(x - 1)^4*(y - 1)^2 - 2*y + x*sin(x*y)*sin(x) + 2); 100*exp(t)*(4*x^3*y^3 - sin(y - 1)*sin((x - 1)*(y - 1)) + cos(y - 1)*cos((x - 1)*(y - 1))*(x - 1)) - 100*exp(t)*(4*(x - 1)^3*(y - 1)^3 - cos(x*y)*cos(x) + y*sin(x*y)*sin(x)); 100*exp(t)*(4*x^3*y^3 - sin(y - 1)*sin((x - 1)*(y - 1)) + cos(y - 1)*cos((x - 1)*(y - 1))*(x - 1)) - 100*exp(t)*(4*(x - 1)^3*(y - 1)^3 - cos(x*y)*cos(x) + y*sin(x*y)*sin(x)); 100*exp(t)*(2*x + 3*x^2*y^4 + cos(y - 1)*cos((x - 1)*(y - 1))*(y - 1)) - exp(t)*(cos(y*pi)*sin(x*pi) + 10) - 300*exp(t)*(3*(x - 1)^4*(y - 1)^2 - 2*y + x*sin(x*y)*sin(x) + 2); exp(t)*(x^3*y^4 + cos(y - 1)*sin((x - 1)*(y - 1)) + x^2); exp(t)*((y - 1)^2 - (x - 1)^4*(y - 1)^3 + cos(x*y)*sin(x)); (exp(t)*(4*x^3*y^3 - sin(y - 1)*sin((x - 1)*(y - 1)) + cos(y - 1)*cos((x - 1)*(y - 1))*(x - 1)))/2 + (exp(t)*(4*(x - 1)^3*(y - 1)^3 - cos(x*y)*cos(x) + y*sin(x*y)*sin(x)))/2
  set Variable names      = x,y,t
end

subsection Exact solution 3D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression =  -cos(t)*(x^2+y^2+1); -cos(t)*(z^2+1+sin(x*y)); -cos(t)*(sin(x*y)+(x^2)*(y^2)+1); cos(t)*(x+y+z+1.5); sin(t)*(2.0*123.0*(exp(x) - 1.0)*(cos(pi/12.0) - 1.0))-cos(t)*(x+y+z+1.5); sin(t)*(-79.3*exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*(79.3*exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5)); sin(t)*(-79.3*exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*(2*(123.0 + 79.3)*(exp(x) - 1.0)*(cos(pi/12.0) - 1.0))-cos(t)*(x+y+z+1.5); 0.0; sin(t)*(79.3*exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5)); 0.0; sin(t)*(2*(123.0 + 79.3)*(exp(x) - 1.0)*(cos(pi/12.0) - 1.0))-cos(t)*(x+y+z+1.5); 0.0; sin(t)*(-(exp(x) - 1.0)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*((exp(x) - 1.0)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5)); sin(t)*(sin(pi/12.0)*(exp(x) - 1.0)); sin(t)*(-(exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5))/2.0); sin(t)*(-(exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5))/2.0)
  set Variable names      = x,y,z,t
end

#################################################################################
# Exact solution, gradient values (only velocity and stress values are used)
subsection Exact gradient 2D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression = exp(t)*((2778046668940015*cos(pi*x)*sin(pi*y)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*y)*sin(pi*x)*((x + 1)^2 + y^2))/281474976710656 - pi*cos(pi*x)*cos(pi*y)*(2*x + 2) + y*pi*sin(pi*x)*sin(pi*y)*cos(x*y)); exp(t)*((2778046668940015*cos(pi*y)*sin(pi*x)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*x)*sin(pi*y)*((x + 1)^2 + y^2))/281474976710656 - 2*y*pi*cos(pi*x)*cos(pi*y) + x*pi*sin(pi*x)*sin(pi*y)*cos(x*y)); exp(t)*((2778046668940015*cos(pi*y)*sin(pi*x)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*x)*sin(pi*y)*(x + 1)^2)/281474976710656 + pi*sin(pi*x)*sin(pi*y)*(2*x + 2) - y*pi*cos(pi*x)*cos(pi*y)*cos(x*y)); exp(t)*((2778046668940015*cos(pi*x)*sin(pi*y)*sin(x*y))/281474976710656 + (2778046668940015*cos(pi*y)*sin(pi*x)*(x + 1)^2)/281474976710656 - x*pi*cos(pi*x)*cos(pi*y)*cos(x*y)); 0; 0; 300*exp(t)*(6*x*y^4 - cos(y - 1)*sin((x - 1)*(y - 1))*(y - 1)^2 + 2) - 100*exp(t)*(sin(x*y)*sin(x) + 12*(x - 1)^3*(y - 1)^2 + x*sin(x*y)*cos(x) + x*y*cos(x*y)*sin(x)) - pi*exp(t)*cos(x*pi)*cos(y*pi); 300*exp(t)*(cos(y - 1)*cos((x - 1)*(y - 1)) + 12*x^2*y^3 - sin(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)*(y - 1)) - 100*exp(t)*(3*(2*y - 2)*(x - 1)^4 + x^2*cos(x*y)*sin(x) - 2) + pi*exp(t)*sin(x*pi)*sin(y*pi); 100*exp(t)*(cos(y - 1)*cos((x - 1)*(y - 1)) + 12*x^2*y^3 - sin(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)*(y - 1)) - 100*exp(t)*(12*(x - 1)^2*(y - 1)^3 + cos(x*y)*sin(x) + 2*y*sin(x*y)*cos(x) + y^2*cos(x*y)*sin(x)); - 100*exp(t)*(cos(y - 1)*sin((x - 1)*(y - 1)) - 12*x^3*y^2 + cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)^2 + 2*sin(y - 1)*cos((x - 1)*(y - 1))*(x - 1)) - 100*exp(t)*(sin(x*y)*sin(x) + 12*(x - 1)^3*(y - 1)^2 + x*sin(x*y)*cos(x) + x*y*cos(x*y)*sin(x)); 100*exp(t)*(cos(y - 1)*cos((x - 1)*(y - 1)) + 12*x^2*y^3 - sin(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)*(y - 1)) - 100*exp(t)*(12*(x - 1)^2*(y - 1)^3 + cos(x*y)*sin(x) + 2*y*sin(x*y)*cos(x) + y^2*cos(x*y)*sin(x)); - 100*exp(t)*(cos(y - 1)*sin((x - 1)*(y - 1)) - 12*x^3*y^2 + cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)^2 + 2*sin(y - 1)*cos((x - 1)*(y - 1))*(x - 1)) - 100*exp(t)*(sin(x*y)*sin(x) + 12*(x - 1)^3*(y - 1)^2 + x*sin(x*y)*cos(x) + x*y*cos(x*y)*sin(x)); 100*exp(t)*(6*x*y^4 - cos(y - 1)*sin((x - 1)*(y - 1))*(y - 1)^2 + 2) - 300*exp(t)*(sin(x*y)*sin(x) + 12*(x - 1)^3*(y - 1)^2 + x*sin(x*y)*cos(x) + x*y*cos(x*y)*sin(x)) - pi*exp(t)*cos(x*pi)*cos(y*pi); 100*exp(t)*(cos(y - 1)*cos((x - 1)*(y - 1)) + 12*x^2*y^3 - sin(y - 1)*cos((x - 1)*(y - 1))*(y - 1) - cos(y - 1)*sin((x - 1)*(y - 1))*(x - 1)*(y - 1)) - 300*exp(t)*(3*(2*y - 2)*(x - 1)^4 + x^2*cos(x*y)*sin(x) - 2) + pi*exp(t)*sin(x*pi)*sin(y*pi); 0; 0; 0; 0; 0; 0
  set Variable names      = x,y,t
end
subsection Exact gradient 3D
  set Function constants  =
  # Order: velocity, pressure, stress, displacement, rotation
  set Function expression = -cos(t)*2*x; -cos(t)*2*y; 0; -cos(t)*cos(x*y)*y; -cos(t)*cos(x*y)*x; -cos(t)*2*z; -cos(t)*(cos(x*y)*y+2*x*y*y); -cos(t)*(cos(x*y)*x+2*x*x*y); 0; 0; 0; 0; sin(t)*(2.0*123.0*exp(x)*(cos(pi/12.0) - 1.0))-cos(t); 0.0-cos(t); 0.0-cos(t); sin(t)*(-79.3*exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*(79.3*exp(x)*(cos(pi/12.0) - 1.0)); sin(t)*(-79.3*sin(pi/12.0)*exp(x)); sin(t)*(79.3*exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5)); sin(t)*(79.3*sin(pi/12.0)*exp(x)); sin(t)*(79.3*exp(x)*(cos(pi/12.0) - 1.0)); sin(t)*(-79.3*exp(x)*(y - cos(pi/12.0)*(y - 0.5) + sin(pi/12.0)*(z - 0.5) - 0.5)); sin(t)*(79.3*exp(x)*(cos(pi/12.0) - 1.0)); sin(t)*(-79.3*sin(pi/12.0)*exp(x)); sin(t)*(2.0*exp(x)*(123.0 + 79.3)*(cos(pi/12.0) - 1.0))-cos(t); 0.0-cos(t); 0.0-cos(t); 0.0; 0.0; 0.0; sin(t)*(79.3*exp(x)*(cos(pi/12.0)*(z - 0.5) - z + sin(pi/12.0)*(y - 0.5) + 0.5)); sin(t)*(79.3*sin(pi/12.0)*exp(x)); sin(t)*(79.3*exp(x)*(cos(pi/12.0) - 1.0)); 0.0; 0.0; 0.0; sin(t)*(2.0*exp(x)*(123.0 + 79.3)*(cos(pi/12.0) - 1.0))-cos(t);  0.0-cos(t);  0.0-cos(t); 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0
  set Variable names      = x,y,z,t
end

